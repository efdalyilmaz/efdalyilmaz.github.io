{"version":3,"sources":["hookshuffle/components/card/index.jsx","hookshuffle/components/board/index.jsx","hookshuffle/deck.js","hookshuffle/components/page/index.jsx","hookreducer/components/card/index.jsx","hookreducer/components/board/index.jsx","hookreducer/reducer.js","hookreducer/deck.js","hookreducer/components/page/index.jsx","hookreducerternary/components/card/index.jsx","hookreducerternary/components/board/index.jsx","hookreducerternary/reducer.js","hookreducerternary/deck.js","hookreducerternary/components/page/index.jsx","serviceWorker.js","index.js","App.js"],"names":["Card","_ref","handleClick","id","type","flipped","solved","height","width","disabled","react_default","a","createElement","className","concat","style","onClick","alt","src","Board","dimension","cards","map","card","key","includes","initializeDeck","array","_array","slice","i","length","randomIndex","Math","floor","random","temp","shuffle","reduce","acc","push","Page","_useState","useState","_useState2","Object","slicedToArray","setCards","_useState3","_useState4","setFlipped","_useState5","_useState6","setDimesion","_useState7","_useState8","setSolved","_useState9","_useState10","setDisabled","useEffect","resizeBoard","preloadImages","resizeListener","window","addEventListener","removeEventListener","min","document","documentElement","clientWidth","clientHeight","resetCards","forEach","Image","sameCardClicked","clickedCard","find","isMatched","toConsumableArray","setTimeout","card_Card","initialState","reducer","state","action","newState","assign","payload","Error","_useReducer","useReducer","_useReducer2","dispatch","board_Board","components_card_Card","filter","every","f","components_board_Board","Boolean","location","hostname","match","ReactDOM","render","page","setPage","page_Page","components_page_Page","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc684a8a.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './styles.css'\r\n\r\n\r\nexport default function Card({\r\n  handleClick,\r\n  id,\r\n  type,\r\n  flipped,\r\n  solved,\r\n  height,\r\n  width,\r\n  disabled\r\n}) {\r\n  return (\r\n    <div\r\n      className={`flip-container ${flipped ? 'flipped animated flipInX' : 'animated swing'}`}\r\n      style={{\r\n        width,\r\n        height,\r\n      }}\r\n      onClick={() => disabled ? null : (handleClick(id))}>\r\n      <div className='flipper'> \r\n        <img\r\n          alt='card'\r\n          className={flipped ? 'front' : 'back'}\r\n          src={solved || flipped ? `/img/${type}.png` : `/img/back.png`}\r\n          style={{ width, height }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  flipped: PropTypes.bool.isRequired,\r\n  solved: PropTypes.bool.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../card';\r\nimport './styles.css'\r\n\r\nexport default function Board({dimension, cards, flipped, solved, handleClick, disabled}){\r\n    return (\r\n        <div className=\"board\">\r\n        {\r\n            cards.map(\r\n                card =>(\r\n                    <Card\r\n                    key={card.id}\r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width={dimension / 4.5}\r\n                    height={dimension / 4.5}\r\n                    flipped={flipped.includes(card.id)}\r\n                    solved={solved.includes(card.id)}\r\n                    handleClick={() => handleClick(card.id)}\r\n                    disabled={disabled || solved.includes(card.id)}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nBoard.propTypes={\r\n    disabled: PropTypes.bool.isRequired,\r\n    dimension: PropTypes.number.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}","\r\nexport function shuffle(array){\r\n    const _array = array.slice(0);\r\n    for(let i=0; i< array.length -1;i++){\r\n        let randomIndex = Math.floor(Math.random() * (i+1));\r\n        let temp = _array[i];\r\n        _array[i] = _array[randomIndex];\r\n        _array[randomIndex] = temp;\r\n    }\r\n\r\n    return _array;\r\n}\r\n\r\nexport default function initializeDeck() {\r\n    let id = 0;\r\n    const cards = ['react','reactu','redux','vue','angular','javascript','ruby',\r\n    'rails'].reduce( (acc, type) => {\r\n        acc.push({\r\n            id:id++,\r\n            type\r\n            })\r\n            acc.push({\r\n                id:id++,\r\n                type\r\n            })\r\n            return acc\r\n        }, []);\r\n\r\n        return shuffle(cards);\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Board from '../board';\r\n\r\nimport initializeDeck from '../../deck';\r\n\r\nexport default function Page() {\r\n    const [cards, setCards] = useState([]);\r\n    const [flipped, setFlipped] = useState([]);\r\n    const [dimension, setDimesion] = useState();\r\n    const [solved, setSolved] = useState([]);\r\n    const [disabled, setDisabled] = useState(false);\r\n\r\n    useEffect(() => {\r\n      resizeBoard();\r\n      setCards(initializeDeck());\r\n      preloadImages();\r\n    },\r\n    []);\r\n\r\n    useEffect(() => {\r\n      preloadImages();\r\n    }, cards)\r\n\r\n    useEffect(() => {\r\n      const resizeListener = window.addEventListener('resize', resizeBoard);\r\n      return () => window.removeEventListener('resize', resizeListener);\r\n    })\r\n\r\n    const resizeBoard =() =>{\r\n      setDimesion(Math.min(document.documentElement.clientWidth,document.documentElement.clientHeight));\r\n    }\r\n\r\n    const resetCards = () => {\r\n      setFlipped([]);\r\n      setDisabled(false);\r\n    }\r\n\r\n    const sameCardClicked = (flipped, id) => flipped.includes(id);\r\n\r\n    const isMatched = (id) => {\r\n      const clickedCard = cards.find(card => card.id === id);\r\n      const flippedCard = cards.find(card => card.id === flipped[0]);\r\n\r\n      return flippedCard.type === clickedCard.type;\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n      setDisabled(true);\r\n      if(flipped.length === 0){\r\n        setFlipped([id]);\r\n        setDisabled(false);\r\n      }else{\r\n        if(sameCardClicked(flipped, id)){\r\n          return;\r\n        }\r\n        setFlipped([flipped[0],id]);\r\n        if(isMatched(id)){\r\n          setSolved([...solved, flipped[0], id]);\r\n          setTimeout(() => setCards(initializeDeck()), 1000);\r\n          resetCards();\r\n        }else{\r\n          setTimeout(resetCards, 1000);\r\n        }\r\n      }\r\n    };\r\n\r\n    const preloadImages = () => {\r\n      cards.forEach( (card) => {\r\n        const src = `/img/${card.type}.png`;\r\n        new Image().src = src;\r\n      });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n       <h2>Can you remember where the cards are?</h2>\r\n       <Board\r\n          dimension={dimension}\r\n          cards={cards}\r\n          flipped={flipped}\r\n          handleClick={handleClick}\r\n          disabled={disabled}\r\n          solved={solved}\r\n       />\r\n      </div>\r\n    );\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './styles.css'\r\n\r\nexport default function Card({\r\n  handleClick,\r\n  id,\r\n  type,\r\n  flipped,\r\n  solved,\r\n  height,\r\n  width,\r\n  disabled\r\n}) {\r\n  return (\r\n    <div\r\n      className={`flip-container ${flipped ? 'flipped' : ''}`}\r\n      style={{\r\n        width,\r\n        height,\r\n      }}\r\n      onClick={() => disabled ? null : (handleClick(id))}>\r\n      <div className='flipper'> \r\n        <img\r\n          alt='card'\r\n          className={flipped ? 'front' : 'back'}\r\n          src={solved || flipped ? `/img/${type}.png` : `/img/back.png`}\r\n          style={{ width, height }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  flipped: PropTypes.bool.isRequired,\r\n  solved: PropTypes.bool.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../card';\r\nimport './styles.css'\r\n\r\nexport default function Board({dimension, cards, flipped, solved, handleClick, disabled}){\r\n\r\n    return (\r\n        <div className=\"board\">\r\n        {\r\n            cards.map(\r\n                card =>(\r\n                    <Card\r\n                    key={card.id}\r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width={dimension / 4.5}\r\n                    height={dimension / 4.5}\r\n                    flipped={flipped.includes(card.id)}\r\n                    solved={solved.includes(card.id)}\r\n                    handleClick={() => handleClick(card.id)}\r\n                    disabled={disabled || solved.includes(card.id)}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nBoard.propTypes={\r\n    disabled: PropTypes.bool.isRequired,\r\n    dimension: PropTypes.number.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}","import initializeDeck from './deck';\r\n\r\nexport const initialState = {\r\n    cards: initializeDeck(),\r\n    flipped: [],\r\n    dimension: Math.min(document.documentElement.clientWidth,document.documentElement.clientHeight),\r\n    solved: [],\r\n    disabled:false,\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const newState = Object.assign({},state);\r\n  switch (action.type) {\r\n    case 'setCards':\r\n      newState.cards = action.payload;\r\n      return newState;\r\n    case 'setFlipped':\r\n      newState.flipped =action.payload;\r\n      return newState;\r\n    case 'setDimension':\r\n      newState.dimension = action.payload;\r\n      return newState;\r\n    case 'setSolved':\r\n      newState.solved = action.payload;\r\n      return newState;\r\n    case 'setDisabled':\r\n      newState.disabled = action.payload;\r\n      return newState;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","\r\nexport function shuffle(array){\r\n    const _array = array.slice(0);\r\n    for(let i=0; i< array.length -1;i++){\r\n        let randomIndex = Math.floor(Math.random() * (i+1));\r\n        let temp = _array[i];\r\n        _array[i] = _array[randomIndex];\r\n        _array[randomIndex] = temp;\r\n    }\r\n\r\n    return _array;\r\n}\r\n\r\nexport default function initializeDeck() {\r\n    let id = 0;\r\n    const cards = ['react','reactu','redux','vue','angular','javascript','ruby',\r\n    'rails'].reduce( (acc, type) => {\r\n        acc.push({\r\n            id:id++,\r\n            type\r\n            })\r\n            acc.push({\r\n                id:id++,\r\n                type\r\n            })\r\n            return acc\r\n        }, []);\r\n\r\n        return shuffle(cards);\r\n}","import React, {  useEffect, useReducer } from 'react';\r\nimport Board from '../board';\r\n\r\nimport {reducer, initialState} from '../../reducer';\r\n\r\n\r\nexport default function Page() {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n \r\n    useEffect(() => {\r\n      preloadImages();\r\n    }, state.cards)\r\n\r\n\r\n    const resetCards = () => {\r\n      dispatch({type:'setFlipped', payload:[]});\r\n      dispatch({type:'setDisabled', payload:false});\r\n    }\r\n\r\n    const sameCardClicked = (flipped, id) => flipped.includes(id);\r\n\r\n    const isMatched = (id) => {\r\n      const clickedCard = state.cards.find(card => card.id === id);\r\n      const flippedCard = state.cards.find(card => card.id === state.flipped[0]);\r\n\r\n      return flippedCard.type === clickedCard.type;\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n      debugger;\r\n      dispatch({type:'setDisabled', payload:true});\r\n      if(state.flipped.length === 0){\r\n        dispatch({type:'setFlipped', payload:[id]});\r\n        dispatch({type:'setDisabled', payload:false});\r\n      }else{\r\n        if(sameCardClicked(state.flipped, id)){\r\n          return;\r\n        }\r\n        dispatch({type:'setFlipped', payload:[state.flipped[0],id]});\r\n        if(isMatched(id)){\r\n          dispatch({type:'setSolved', payload:[...state.solved, state.flipped[0], id]});\r\n          resetCards();\r\n        }else{\r\n          setTimeout(resetCards, 2000);\r\n        }\r\n      }\r\n    };\r\n\r\n    const preloadImages = () => {\r\n      state.cards.forEach( (card) => {\r\n        const src = `/img/${card.type}.png`;\r\n        new Image().src = src;\r\n      });\r\n    };\r\n    \r\n    return (\r\n      \r\n      <div>\r\n       <h2>Can you remember where the cards are?</h2>\r\n       <Board\r\n       dimension={state.dimension}\r\n       cards={state.cards}\r\n       flipped={state.flipped}\r\n       handleClick={handleClick}\r\n       disabled={state.disabled}\r\n       solved={state.solved}\r\n       />\r\n      </div>\r\n    );\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './styles.css'\r\n\r\nexport default function Card({\r\n  handleClick,\r\n  id,\r\n  type,\r\n  flipped,\r\n  solved,\r\n  height,\r\n  width,\r\n  disabled\r\n}) {\r\n  return (\r\n    <div\r\n      className={`flip-container ${flipped ? 'flipped' : ''}`}\r\n      style={{\r\n        width,\r\n        height,\r\n      }}\r\n      onClick={() => disabled ? null : (handleClick(id))}>\r\n      <div className='flipper'> \r\n        <img\r\n          alt='card'\r\n          className={flipped ? 'front' : 'back'}\r\n          src={solved || flipped ? `/img/${type}.png` : `/img/back.png`}\r\n          style={{ width, height }}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nCard.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  flipped: PropTypes.bool.isRequired,\r\n  solved: PropTypes.bool.isRequired,\r\n  height: PropTypes.number.isRequired,\r\n  width: PropTypes.number.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Card from '../card';\r\nimport './styles.css'\r\n\r\nexport default function Board({dimension, cards, flipped, solved, handleClick, disabled}){\r\n\r\n    return (\r\n        <div className=\"board\">\r\n        {\r\n            cards.map(\r\n                card =>(\r\n                    <Card\r\n                    key={card.id}\r\n                    id={card.id}\r\n                    type={card.type}\r\n                    width={dimension / 4.5}\r\n                    height={dimension / 4.5}\r\n                    flipped={flipped.includes(card.id)}\r\n                    solved={solved.includes(card.id)}\r\n                    handleClick={() => handleClick(card.id)}\r\n                    disabled={disabled || solved.includes(card.id)}\r\n                    />\r\n                )\r\n            )\r\n        }\r\n        </div>\r\n    );\r\n}\r\n\r\nBoard.propTypes={\r\n    disabled: PropTypes.bool.isRequired,\r\n    dimension: PropTypes.number.isRequired,\r\n    cards: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n    flipped: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    solved: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    handleClick: PropTypes.func.isRequired\r\n}","import initializeDeck from './deck';\r\n\r\nexport const initialState = {\r\n    cards: initializeDeck(),\r\n    flipped: [],\r\n    dimension: Math.min(document.documentElement.clientWidth,document.documentElement.clientHeight),\r\n    solved: [],\r\n    disabled:false,\r\n};\r\n\r\nexport function reducer(state, action) {\r\n  const newState = Object.assign({},state);\r\n  switch (action.type) {\r\n    case 'setCards':\r\n      newState.cards = action.payload;\r\n      return newState;\r\n    case 'setFlipped':\r\n      newState.flipped =action.payload;\r\n      return newState;\r\n    case 'setDimension':\r\n      newState.dimension = action.payload;\r\n      return newState;\r\n    case 'setSolved':\r\n      newState.solved = action.payload;\r\n      return newState;\r\n    case 'setDisabled':\r\n      newState.disabled = action.payload;\r\n      return newState;\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n","\r\nexport function shuffle(array){\r\n    const _array = array.slice(0);\r\n    for(let i=0; i< array.length -1;i++){\r\n        let randomIndex = Math.floor(Math.random() * (i+1));\r\n        let temp = _array[i];\r\n        _array[i] = _array[randomIndex];\r\n        _array[randomIndex] = temp;\r\n    }\r\n\r\n    return _array;\r\n}\r\n\r\nexport default function initializeDeck() {\r\n    let id = 0;\r\n    const cards = ['react','reactu','redux','vue','angular','javascript','ruby',\r\n    'rails'].reduce( (acc, type) => {\r\n        acc.push({\r\n            id:id++,\r\n            type\r\n            })\r\n        acc.push({\r\n            id:id++,\r\n            type\r\n        })\r\n        acc.push({\r\n            id:id++,\r\n            type\r\n        })\r\n            return acc\r\n        }, []);\r\n\r\n        return shuffle(cards);\r\n}","import React, {  useEffect, useReducer } from 'react';\r\nimport Board from '../board';\r\n\r\nimport {reducer, initialState} from '../../reducer';\r\n\r\n\r\nexport default function Page() {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n \r\n    useEffect(() => {\r\n      preloadImages();\r\n    }, state.cards)\r\n\r\n\r\n    const resetCards = () => {\r\n      dispatch({type:'setFlipped', payload:[]});\r\n      dispatch({type:'setDisabled', payload:false});\r\n    }\r\n\r\n    const sameCardClicked = (flipped, id) => flipped.includes(id);\r\n\r\n    const isMatched = (id) => {\r\n      const clickedCard = state.cards.find(card => card.id === id);\r\n      const flippedCards = state.cards.filter(card => state.flipped.includes(card.id));\r\n\r\n      return flippedCards.every( f=> f.type === clickedCard.type);\r\n    }\r\n\r\n    const handleClick = (id) => {\r\n      dispatch({type:'setDisabled', payload:true});\r\n      if(state.flipped.length === 0){\r\n        dispatch({type:'setFlipped', payload:[id]});\r\n        dispatch({type:'setDisabled', payload:false});\r\n      }else{\r\n        if(sameCardClicked(state.flipped, id)){\r\n          return;\r\n        }\r\n        dispatch({type:'setFlipped', payload:[...state.flipped,id]});\r\n\r\n        if(isMatched(id) && state.flipped.length === 2){\r\n          dispatch({type:'setSolved', payload:[...state.solved, ...state.flipped, id]});\r\n          resetCards();\r\n        }\r\n        else if(isMatched(id) && state.flipped.length === 1){\r\n          dispatch({type:'setDisabled', payload:false});\r\n          return;\r\n        }\r\n        else{\r\n          setTimeout(resetCards, 1000);\r\n        }\r\n      }\r\n    };\r\n\r\n    const preloadImages = () => {\r\n      state.cards.forEach( (card) => {\r\n        const src = `/img/${card.type}.png`;\r\n        new Image().src = src;\r\n      });\r\n    };\r\n    \r\n    return (\r\n      \r\n      <div>\r\n       <h2>Can you remember where the cards are?</h2>\r\n       <Board\r\n       dimension={state.dimension}\r\n       cards={state.cards}\r\n       flipped={state.flipped}\r\n       handleClick={handleClick}\r\n       disabled={state.disabled}\r\n       solved={state.solved}\r\n       />\r\n      </div>\r\n    );\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n     const NextApp = require('./App').default;\n     ReactDOM.render(<NextApp/>, document.getElementById('root'));\n    });\n}\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n","import React, {useState} from 'react';\nimport {default as HookShuffle} from './hookshuffle/components/page';\nimport {default as HookReducer} from './hookreducer/components/page';\nimport {default as HookReducerTernary} from './hookreducerternary/components/page';\n\nimport \"../node_modules/animate.css/animate.min.css\"; \n\nexport default function App() {\n\n    const [page, setPage] = useState(\"\");\n\n    const onClick = (page) => {\n      setPage(page);\n    };\n\n    if(page === \"HookShuffle\"){\n      return <HookShuffle />\n    }else if(page === \"HookReducer\"){\n      return <HookReducer />\n    }\n    else if(page === \"HookReducerTernary\"){\n      return <HookReducerTernary />\n    }\n\n    return (\n      <div className='menu animated bounceInDown'>\n\n        <div className='menuItem' onClick={() => onClick(\"HookShuffle\")}>Hook Shuffle</div>\n        <div className='menuItem' onClick={() => onClick(\"HookReducer\")}>Hook Reducer</div>\n        <div className='menuItem' onClick={() => onClick(\"HookReducerTernary\")}>Hook Reducer Ternary</div>\n      </div>);\n}"],"sourceRoot":""}